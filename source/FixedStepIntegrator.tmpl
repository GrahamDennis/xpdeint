#*
FixedStepIntegrator.tmpl

Created by Graham Dennis on 2007-10-20.
Copyright (c) 2007 __MyCompanyName__. All rights reserved.
*#
#extends Integrator

#def description: segment $segmentNumber (Unnamed fixed-step integrator)

#def createStepVariable
#*doc:
This function returns the code that will create a _step variable,
including any modifications necessary due to the ErrorCheck feature.
*#
  ##
double _step = ${interval}/(double)${stepCount};
double _noiseStep = ${interval}/(double)${stepCount};
  ##
  #set $featureOrdering = ['ErrorCheck']
${insertCodeForFeatures('createFixedStepVariable', featureOrdering)}#slurp
  ##
#end def


#def segmentFunctionImplementation
  ##
void _segment${segmentNumber}()
{
  ${createStepVariable, autoIndent=True}#slurp
  ##
  #set $featureOrderingOuter = ['Stochastic']
  ${insertCodeForFeatures('integrateFixedStepBegin', featureOrderingOuter), autoIndent=True}#slurp
  
  ${initialise, autoIndent=True}#slurp
  
  ${localInitialise, autoIndent=True}#slurp
  
  for (long _istep = 0; _istep < ${stepCount}; _istep++) {
  ## Insert code for features
  #set $featureOrderingInner = ['Output', 'ErrorCheck', 'Stochastic']
  #set $dict = {'extraIndent': 0}
    ${insertCodeForFeatures('integrateFixedStepInnerLoopBegin', featureOrderingInner, dict), autoIndent=True}#slurp
  #set $extraIndent = $dict.extraIndent
    
    ${singleIntegrationStep, autoIndent=True, extraIndent=extraIndent}#slurp
    
    ${insertCodeForFeaturesInReverseOrder('integrateFixedStepInnerLoopEnd', featureOrderingInner, dict), autoIndent=True}#slurp
  }

  ${finalise, autoIndent=True}#slurp
  
  ${insertCodeForFeaturesInReverseOrder('integrateFixedStepEnd', featureOrderingOuter), autoIndent=True}#slurp
}
  ##
#end def
