@*
TopLevelSequenceElement.tmpl

Created by Graham Dennis on 2007-08-27.
Copyright (c) 2007 __MyCompanyName__. All rights reserved.
*@
@extends _Segment
@*
  Description of template
*@
@assert $segmentNumber == 0
@def description: segment $segmentNumber (Top level sequence)
@*

  Function prototypes
*@
@def functionPrototypes
void _segment0();
@end def


@def topLevelSequenceInnerContent
  @#
$propagationDimension = 0.0;
  @#
  @for $field in $filter(lambda x: not x.isOutputField, $fields)
    @set $result = $field.initialise
    @if $result

${result}@slurp
    @end if
  @end for
  @#
  @for $momentGroup in $momentGroups
    @# We only need to set the sample index for the propagation dimension
    @# and only if this moment group has the propagation dimension as one
    @# of its dimensions
    @if not $momentGroup.hasDimensionName($propagationDimension)
      @continue
    @end if
    @set $dimensionNumber = $momentGroup.indexOfDimensionName($propagationDimension)
_mg${momentGroup.number}_sample_index${dimensionNumber} = 0;
  @end for
  @#
  @for $momentGroup in $filter(lambda x: x.requiresInitialSample, $momentGroups)
_mg${momentGroup.number}_sample();
  @end for
  @#
  @for $segment in $childSegments
_segment${segment.segmentNumber}();
  @end for
  @#

  @for $momentGroup in $momentGroups
_mg${momentGroup.number}_process();
  @end for  
  @#
@end def

@def mainRoutine
  @#
int main(int argc, char **argv)
{
  @for $field in $fields
  ${field.allocate, autoIndent=True}@slurp
    @if $field.isOutputField
  ${field.initialise, autoIndent=True}@slurp
    @end if
  @end for
  
  ${mainRoutineInnerContent, autoIndent=True}@slurp
  
  return 0;
}
  @#
@end def

@def mainRoutineInnerContent
  @#
  @*
    And now insert the code for the features that apply in the main function
  *@
  @# Note that Bing, and Argv commute
  @set $featureOrdering = ['Bing', 'Argv', 'FourierTransform', 'Benchmark', 'Output']
${insertCodeForFeatures('mainBegin', $featureOrdering)}@slurp

@# This needs to be extracted into a function so that it can be indented further if necessary
/* Code that actually does stuff goes here */
_segment0();

${insertCodeForFeaturesInReverseOrder('mainEnd', $featureOrdering)}@slurp
  @#
  @for $field in $fields
${field.free}@slurp
  @end for

return 0;
  @#
@end def
