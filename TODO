* Complete Stochastics support
  * Test
  * Add the GNU scientific library as another source for noises

* Make the regular expressions for integer-valued dimensions not consider or modify strings which are
  in comments or in quotes (e.g. printf strings)

* Write a front-end to auto-configure preference file.
  For reading the preferences file, look into using the Python module
  ConfigParser. It seems to be part of the standard distribution.
  For a more complete list of options for this, see http://wiki.python.org/moin/ConfigParserShootout

* Add ASCII/binary vector initialisation options

* CDATA initialisation should be able to depend on other vectors

* Add the ability to distribute stochastic simulations using OpenMP

* Add the ability to distribute stochastic simulations using MPI with the scheduling method

* Deterministic/distributed MPI

* Make sure that all the things that Andy has been doing to enable various simulation
  parameters can be controlled at simulation run time can be done in xpdeint.
    - Implemented for the "interval" attribute of <integrate>
    - It should be pretty easy to generalise the method in xpdeint. We just throw less
      exceptions. :)

* Rewrite parser so that it isn't so long. (Ask Gabriel McManus)

* Documentation needs to be written (both user and developer). The developer documentation
  needs to be converted from current straight comments to use docstrings.

* Licenses: The GPLv2 header needs to be put on all of the source files for this project.
  I've been very lazy and have just used the default of the text editor I have been using
  which is simply "copyright (c) Graham Dennis" or the like. My intention is that the whole
  project should be under GPL2 unless there is some compelling reason why it should be under
  something else.

? FFTW2 support. FFTW3 support has been written and tested, and the basic code for FFTW2 is in
  FourierTransformFFTW2.tmpl, however it hasn't been finished.

* Example library

* Output:
  ? Post-processing

* Runtime-limiting support (as in xmds-1)

* NaN-checking (as in xmds-1)

* In adaptive integrators, the ability to set an absolute tolerance (per vector component) in addition to a relative tolerance
  for step-error calculations.

* Check that all bug fixes to xmds-1 since September 1, 2007 have been added to xpdeint. In particular, I don't think the changes to the adaptive
  step error-calculation routine have been made.
  
* Add the semi-implicit integrator from xmds-1 (other implicit or semi-implicit integrators would be good too).
