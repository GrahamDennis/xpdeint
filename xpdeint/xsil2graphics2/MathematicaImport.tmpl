@*
MathematicaImport.tmpl

Created by Joe Hope on 2009-1-7.
Copyright (c) 2009 __MyCompanyName__. All rights reserved.
*@

@def description: Creates text to import data from XSIL files into Mathematica.

@attr $defaultExtension = 'nb'

@def printMathematicaListOrElement(listOrElement)
  @# This is a function to turn an array into a Mathematica list.  Called recursively, and assumes the elements are floats or lists.
  @if isinstance(listOrElement,float):
$listOrElement@slurp
  @else:
{${', '.join([$printMathematicaListOrElement(element) for element in listOrElement])}}@slurp
  @end if
@end def

@def loadXSILFile($xsilFile)

 @set declaredVars=[]
 @for objectNum, xsilObject in enumerate(xsilFile.xsilObjects):
   @if xsilObject.data.format == 'ascii':
     @set nIndepVar = len(xsilObject.independentVariables)
     @for var in xsilObject.independentVariables
       @set varName = var["name"].replace('_','') + str(objectNum + 1)
       @silent declaredVars.append(varName)
Clear[$varName]
$varName = {${', '.join(map(str, var["array"]))}};
     @end for

     @for varD in xsilObject.dependentVariables:
       @set varName = varD["name"].replace('_','') + str(objectNum + 1)
       @silent declaredVars.append(varName)
Clear[$varName]
$varName = $printMathematicaListOrElement($varD["array"]);
     @end for 

   @elif xsilObject.dataFormat == 'Binary':

Binary!

   @else:
The data format is neither 'Text' nor 'Binary'.  xsil2graphics2 is confused, and I think there might be someone standing RIGHT BEHIND YOU!
   @end if

 @end for

declaredVariables={${', '.join([c'"$dV"' for dV in declaredVars])}};
@*
#  print "Joe is great"  
#  print inputXSILFile
#  print type(inputXSILFile)
#  print len(inputXSILFile.xsilObjects)
#  print inputXSILFile.xsilObjects[0]
#  print inputXSILFile.xsilObjects[0].name  
#  print len(inputXSILFile.xsilObjects[0].independentVariables)
#  print inputXSILFile.xsilObjects[0].independentVariables[0]["name"]
#  print len(inputXSILFile.xsilObjects[0].dependentVariables)
#  print inputXSILFile.xsilObjects[0].dependentVariables[0]["name"]
#  print inputXSILFile.xsilObjects[0].dependentVariables[0]["array"]
#  print inputXSILFile.xsilObjects[0].uLong
#  print inputXSILFile.xsilObjects[0].precision
#  print inputXSILFile.xsilObjects[0].encoding
#  print inputXSILFile.xsilObjects[0].dataFormat
#  print inputXSILFile.xsilObjects[0].dependentVariables[0]["array"]

*@
@end def

