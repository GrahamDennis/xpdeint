@*
HermiteGaussFourierEPBasis.tmpl

Hermite-Gauss Fourier basis using the definite parity of the basis functions to remove
half the work.

Created by Graham Dennis on 2009-08-12.

Copyright (c) 2009-2012, Graham Dennis

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*@
@extends xpdeint.Features.Transforms.HermiteGaussEPBasis

@def description: Hermite-Gauss Fourier basis (Harmonic oscillator)

@attr $matrixType = 'complex'

@def transformMatricesForwardDimConstantsAtIndex($forwardDimRep, $backwardDimRep, $forwardIndex)
  @super(forwardDimRep, backwardDimRep, forwardIndex)
complex eigenvalue_factor = 1.0;
@end def

@def transformMatricesForDimRepsAtIndices($forwardDimRep, $backwardDimRep, $forwardIndex, $backwardIndex)
  @#
  @super(forwardDimRep, backwardDimRep, forwardIndex, backwardIndex)
eigenvalue_factor *= i;
  @#
@end def

@def forwardMatrixForDimAtIndices($forwardDimRep, $backwardDimRep, $forwardIndex, $backwardIndex)
eigenvalue_factor * @super(forwardDimRep, backwardDimRep, forwardIndex, backwardIndex)@slurp
@end def

@def backwardMatrixForDimAtIndices($forwardDimRep, $backwardDimRep, $forwardIndex, $backwardIndex)
conj(eigenvalue_factor) * @super(forwardDimRep, backwardDimRep, forwardIndex, backwardIndex)@slurp
@end def

