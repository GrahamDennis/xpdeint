<?xml version="1.0" encoding="UTF-8"?>
<simulation xmds-version="2">
  <name>vibstring3</name>
  <author>Joe Hope</author>
  <description>
    Vibrating string
  </description>
  
  <features>
    <benchmark />
    <error_check />
    <bing />
    <fftw version="3" />
    <openmp />
    <globals>
      <![CDATA[
      const double T = 10.0;
      const double mass = 1e-3;
      const double length = 1.0;
      const double mu = mass/length;
      ]]>
    </globals>
  </features>
  
  <geometry>
    <prop_dim> t </prop_dim>
    <transverse_dimensions>
      <integer_valued kind="first">
        <dimension name="u" lattice="2"  domain="(0, 1)" />
      </integer_valued>
      <dimension name="x" lattice="100"  domain="(0, 1)" />
      <dimension name="y" lattice="100"  domain="(0, 1)" />
      <dimension name="z" lattice="100"  domain="(0, 1)" />
      <integer_valued kind="last">
        <dimension name="w" domain="(-3, 3)" />
      </integer_valued>
    </transverse_dimensions>
  </geometry>
  
  <field name="mainField" dimensions="x y">
    <vector name="main" initial_space="x ky">
      <components type="complex">
        u uDot
      </components>
      <initialisation>
        <![CDATA[
          u = exp(-100.0*(x-0.5)*(x-0.5));
          uDot = 0.0;
        ]]>
      </initialisation>
    </vector>
  </field>
  
  <field name="zero_d_test" dimensions="">
    <vector name="integrated_u">
      <components type="complex">
        mom
      </components>
    </vector>
    <computed_vector name="filter1">
      <components type="complex">moment</components>
      <dependencies fourier_space="kx ky">integrated_u main</dependencies>
      <!-- If the moments are of type 'double', then all dimensions that aren't integrated
           must be evaluated in 'x' space. -->
      <![CDATA[
        moment = mod2(u);
      ]]>
    </computed_vector>
  </field>
  
  <sequence>
    <integrate algorithm="RK9" interval="2e-3" steps="100">
      <samples>50 50</samples>
      
      <computed_vector name="filter2" target_field="zero_d_test">
        <components type="complex">sparemoment</components>
        <dependencies fourier_space="kx ky">integrated_u main</dependencies>
        <!-- If the moments are of type 'double', then all dimensions that aren't integrated
             must be evaluated in 'x' space. -->
        <![CDATA[
          sparemoment = mod2(u);
        ]]>
      </computed_vector>
      
      <operators field="mainField">
        <operator kind="ex" constant="yes">
          <operator_names>L</operator_names>
          <![CDATA[
            L = -T*kx*kx/mu;
          ]]>
        </operator>
        <integration_vectors>main</integration_vectors>
        <![CDATA[
          du_dt = uDot;
          duDot_dt = L[u /**/];
        ]]>
      </operators>
      
      <operators field="zero_d_test">
        <integration_vectors>integrated_u</integration_vectors>
        <dependencies>filter1</dependencies>
        <![CDATA[
          dmom_dt = moment;
        ]]>
      </operators>
      
      <filters>
        <filter>
          <dependencies>filter1 main</dependencies>
          <![CDATA[
            u = 1.0 * u;
          ]]>
        </filter>
      </filters>
    </integrate>
  </sequence>
  
  <output format="binary" filename="vibstring3.xsil">
    <group>
      <sampling initial_sample="yes">
        <computed_vector name="filter3" target_field="zero_d_test">
          <components type="complex">sparemomentagain</components>
          <dependencies fourier_space="kx ky">integrated_u main</dependencies>
          <!-- If the moments are of type 'double', then all dimensions that aren't integrated
               must be evaluated in 'x' space. -->
          <![CDATA[
            sparemomentagain = mod2(u);
          ]]>
        </computed_vector>
        <operator kind="ex" constant="yes">
          <operator_names>L</operator_names>
          <![CDATA[
            L = -T*kx*kx/mu;
          ]]>
        </operator>
        <dimension name="x" lattice="100" fourier_space="x" />
        <moments>amp ke</moments>
        <dependencies>main filter1</dependencies>
        <![CDATA[
          amp = u + moment;
          ke= L[u];
        ]]>
      </sampling>
    </group>
    <group>
      <sampling initial_sample="no">
        <moments>momR momentR</moments>
        <dependencies>integrated_u filter1</dependencies>
        <![CDATA[
          momR = mom;
          momentR = moment;
        ]]>
      </sampling>
    </group>
  </output>
</simulation>